{
  "_entries": [
    {
      "name": "new-npm-package",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\index.js",
      "lastModified": 1750337525341,
      "type": "module",
      "originalName": "index",
      "code": "sap.ui.define(['exports', 'sap/ui/model/json/JSONModel'], (function (exports, JSONModel) { 'use strict';\n\n  const popoverModules = [\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module1\",\r\n      },\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module2\",\r\n      },\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module3\",\r\n      },\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module4\",\r\n      },\r\n    ];\n\n  const openPopover = async (controller, oEvent) => {\r\n      \r\n      const oView = controller.getView();\r\n      if (!controller._pPopover) {\r\n          controller._pPopover = controller.loadFragment({\r\n              id: oView.getId(), \r\n              name: \"new-npm-package.Popover\",\r\n          }).then((oPopover) => {\r\n              oView.addDependent(oPopover);\r\n              return oPopover;\r\n          });\r\n      }\r\n\r\n      const oPopover = await controller._pPopover;\r\n      \r\n      \r\n      const aModulesData = popoverModules;\r\n      const oModulesModel = new JSONModel({ items: aModulesData });\r\n      oPopover.setModel(oModulesModel, \"modules\");\r\n\r\n      const closeButton = oPopover.getBeginButton();\r\n      if (closeButton && !closeButton.hasListeners(\"press\")) { // Daha önce listener eklenmediyse ekle\r\n          closeButton.attachPress(() => oPopover.close());\r\n      }\r\n\r\n      // Liste elemanları için\r\n      const list = oPopover.getContent()[0]; // İlk content elemanının liste olduğunu varsayıyoruz\r\n      if (list && !list.hasListeners(\"itemPress\")) {\r\n          list.attachItemPress((event) => {\r\n              const selectedItem = event.getParameter(\"listItem\");\r\n              const context = selectedItem.getBindingContext(\"modules\");\r\n              console.log(\"Selected module from package:\", context.getObject().name);\r\n              oPopover.close(); // Seçimden sonra popover'ı kapat\r\n          });\r\n      }\r\n      \r\n      // Popover'ı, tıklanan butona göre aç.\r\n      oPopover.openBy(oEvent.getSource());\r\n  };\n\n  const __esModule = true ;\n\n  exports.__esModule = __esModule;\n  exports.openPopover = openPopover;\n\n}));\n",
      "relatedPaths": [
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\popoverModules.js",
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\index.js"
      ],
      "imports": [
        "sap/ui/model/json/JSONModel"
      ],
      "dynamicImports": [],
      "generated": false,
      "isWebComponent": false,
      "isEntryPoint": true
    },
    {
      "name": "new-npm-package/Popover.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\Popover.fragment.xml",
      "code": "<core:FragmentDefinition\r\n    xmlns=\"sap.m\"\r\n    xmlns:core=\"sap.ui.core\">\r\n    <Popover\r\n        id=\"npmPopover\"\r\n        title=\"Modules\"\r\n        placement=\"Bottom\"\r\n        width=\"800px\">\r\n        <content>\r\n            <List\r\n                id=\"modulesList\"\r\n                items=\"{modules>/items}\">\r\n                <items>\r\n                    <StandardListItem\r\n                        title=\"{modules>name}\"\r\n                        icon=\"{modules>icon}\"\r\n                        type=\"Active\"\r\n                        press=\".onModulePress\" />\r\n                </items>\r\n            </List>\r\n        </content>\r\n        <beginButton>\r\n            <Button\r\n                id=\"closeButton\"\r\n                text=\"onClose\"\r\n                press=\".onCloseDialog\" />\r\n        </beginButton>\r\n    </Popover>\r\n</core:FragmentDefinition>",
      "type": "resource"
    }
  ]
}