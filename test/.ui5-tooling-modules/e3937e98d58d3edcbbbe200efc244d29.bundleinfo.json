{
  "_entries": [
    {
      "name": "new-npm-package",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\index.js",
      "lastModified": 1750426743992,
      "type": "module",
      "originalName": "index",
      "code": "sap.ui.define(['exports', 'sap/ui/model/json/JSONModel', 'sap/ui/core/Fragment'], (function (exports, JSONModel, Fragment) { 'use strict';\n\n  const popoverModules = [\r\n    {\r\n      id: \"fontSize\",\r\n      icon: \"sap-icon://text-formatting\",\r\n      name: \"Schriftgröße\",\r\n      expandable: true,\r\n      expanded: false,\r\n    },\r\n\r\n    {\r\n      id: \"contrast\",\r\n      icon: \"sap-icon://microphone\",\r\n      name: \"Webseite vorlesen\",\r\n      expandable: true,\r\n      expanded: false,\r\n    },\r\n    {\r\n      id: \"colorBlindness\",\r\n      icon: \"sap-icon://palette\",\r\n      name: \"Farbschwäche\",\r\n      expandable: true,\r\n      expanded: false,\r\n    },\r\n    {\r\n      id: \"blauFilter\",\r\n      icon: \"sap-icon://light-mode\",\r\n      name: \"Blaufilter aktivieren\",\r\n      expandable: true,\r\n      expanded: false,\r\n    },\r\n    {\r\n      id: \"darkMode\",\r\n      icon: \"sap-icon://paint-bucket\",\r\n      name: \"Kontrastmodus\",\r\n      expandable: false,\r\n      expanded: false,\r\n    },\r\n\r\n    {\r\n      id: \"nightMode\",\r\n      icon: \"sap-icon://dark-mode\",\r\n      name: \"Nachtmodus\",\r\n      expandable: false,\r\n      expanded: false,\r\n    },\r\n\r\n    {\r\n      id: \"tabNavigation\",\r\n      icon: \"sap-icon://keyboard-and-mouse\",\r\n      name: \"Tab Navigation\",\r\n      expandable: false,\r\n      expanded: false,\r\n    },\r\n\r\n    {\r\n      id: \"toggleImages\",\r\n      icon: \"sap-icon://picture\",\r\n      name: \"Bilder ausblenden\",\r\n      expandable: false,\r\n      expanded: false,\r\n    },\r\n  ];\n\n  // Bu bayrak, stilin daha önce yüklenip yüklenmediğini kontrol etmek için\r\n  // bu modülün içinde saklanır. Dışarıdan erişilemez.\r\n  let isCustomStyleLoaded = false;\r\n\r\n  /**\r\n   * Uygulamanın <head> bölümüne özel stil dosyasını yalnızca bir kez ekler.\r\n   * Bu fonksiyon, paketin 'package.json' dosyasındaki adını bilir.\r\n   */\r\n  function loadCustomStyleOnce() {\r\n    // Eğer daha önce yüklendiyse, hiçbir şey yapmadan çık.\r\n    if (isCustomStyleLoaded) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 1. ADIM: Yolu dinamik ve güvenilir bir şekilde al.\r\n      // DİKKAT: \"new-npm-package\" kısmını kendi paket adınızla değiştirmelisiniz.\r\n      // Örnekte \"ui5_bfsg_popover\" kullanmıştınız, o şekilde de olabilir.\r\n      const sCorrectPath = sap.ui.require.toUrl(\"new-npm-package/css/style.css\");\r\n\r\n      // 2. ADIM: Link etiketini oluştur ve ekle\r\n      const link = document.createElement(\"link\");\r\n      link.id = \"new-npm-package-styles\"; // Tekrar kontrol için benzersiz bir ID ata.\r\n      link.rel = \"stylesheet\";\r\n      link.type = \"text/css\";\r\n      link.href = sCorrectPath; // Doğru ve dinamik yolu kullan.\r\n      document.head.appendChild(link);\r\n      \r\n      // 3. ADIM: Bayrağı güncelle ki bir daha yüklenmesin.\r\n      isCustomStyleLoaded = true;\r\n      console.log(\"Custom CSS loaded successfully from:\", sCorrectPath);\r\n    } catch (error) {\r\n        console.error(\"Failed to load custom CSS:\", error);\r\n    }\r\n  }\n\n  // ts/js/fontsize.js (Güncellenmiş ve Modüler Hali)\r\n\r\n  let _defaultFontSize = null; // Orijinal yazı tipi boyutunu saklamak için\r\n\r\n  // Dışarıdan verilecek olan settingsModel'i tutacak referans\r\n  let _settingsModel = null;\r\n\r\n  /**\r\n   * Bu modülü, ayarları tutacak olan JSONModel ile başlatır.\r\n   * @param {sap.ui.model.json.JSONModel} oSettingsModel - {fontStep: 0} gibi veri içeren model.\r\n   */\r\n  const initFontSizer = (oSettingsModel) => {\r\n      // Orijinal yazı tipi boyutunu sadece bir kez al ve sakla\r\n      if (!_defaultFontSize) {\r\n          _defaultFontSize = window.getComputedStyle(document.documentElement).getPropertyValue(\"font-size\");\r\n      }\r\n      _settingsModel = oSettingsModel;\r\n  };\r\n\r\n  /**\r\n   * Yazı tipi boyutunu, modeldeki adıma göre ayarlar.\r\n   */\r\n  const _updateView = () => {\r\n      if (_settingsModel && _defaultFontSize) {\r\n          const step = _settingsModel.getProperty(\"/fontStep\");\r\n          // 'calc' kullanarak orijinal boyuta göre hesaplama yapmak en sağlıklısı.\r\n          // Her adımı 2px olarak ayarlayalım.\r\n          const newSize = `calc(${_defaultFontSize} + ${step * 2}px)`;\r\n          document.documentElement.style.fontSize = newSize;\r\n      }\r\n  };\r\n\r\n  /**\r\n   * Sayaç adımını bir artırır ve görünümü günceller.\r\n   */\r\n  const onIncreaseFontSize = () => {\r\n      if (!_settingsModel) return;\r\n      let currentStep = _settingsModel.getProperty(\"/fontStep\");\r\n      if (currentStep < 5) { // Maksimum artış limiti\r\n          _settingsModel.setProperty(\"/fontStep\", currentStep + 1);\r\n          _updateView();\r\n      }\r\n  };\r\n\r\n  /**\r\n   * Sayaç adımını bir azaltır ve görünümü günceller.\r\n   */\r\n  const onDecreaseFontSize = () => {\r\n      if (!_settingsModel) return;\r\n      let currentStep = _settingsModel.getProperty(\"/fontStep\");\r\n      if (currentStep > -3) { // Maksimum azalış limiti\r\n          _settingsModel.setProperty(\"/fontStep\", currentStep - 1);\r\n          _updateView();\r\n      }\r\n  };\r\n\r\n  /**\r\n   * Yazı tipi boyutunu ve sayacı varsayılan değerlere sıfırlar.\r\n   */\r\n  const onResetFontSize = () => {\r\n      if (!_settingsModel) return;\r\n      _settingsModel.setProperty(\"/fontStep\", 0);\r\n      // Orijinal boyutu geri yükle\r\n      document.documentElement.style.fontSize = _defaultFontSize;\r\n  };\n\n  const oSettingsModel = new JSONModel({\r\n      fontStep: 0\r\n  });\r\n\r\n  const openPopover = async (controller, oEvent) => {\r\n      const oView = controller.getView();\r\n      const sFragmentId = oView.getId();\r\n\r\n      \r\n\r\n      if (!controller._pPopover) {\r\n          loadCustomStyleOnce();\r\n          initFontSizer(oSettingsModel);\r\n\r\n          controller._pPopover = Fragment.load({\r\n              id: sFragmentId,\r\n              name: \"new-npm-package.Popover\",\r\n          }).then((oPopover) => {\r\n              oView.addDependent(oPopover);\r\n\r\n              oPopover.setModel(oSettingsModel, \"settings\");\r\n\r\n              const closeButton = Fragment.byId(sFragmentId, \"closePopoverButton\");\r\n              const increaseButton = Fragment.byId(sFragmentId, \"increaseFontButton\");\r\n              const decreaseButton = Fragment.byId(sFragmentId, \"decreaseFontButton\");\r\n              const resetButton = Fragment.byId(sFragmentId, \"resetFontButton\");\r\n\r\n              closeButton?.attachPress(() => oPopover.close());\r\n              increaseButton?.attachPress(onIncreaseFontSize);\r\n              decreaseButton?.attachPress(onDecreaseFontSize);\r\n              resetButton?.attachPress(onResetFontSize);\r\n\r\n              return oPopover;\r\n          });\r\n      }\r\n\r\n      const oPopover = await controller._pPopover;\r\n\r\n      oPopover.setModel(new JSONModel({ items: popoverModules }), \"modules\");\r\n      oPopover.openBy(oEvent.getSource());\r\n  };\n\n  const __esModule = true ;\n\n  exports.__esModule = __esModule;\n  exports.openPopover = openPopover;\n\n}));\n",
      "relatedPaths": [
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\popoverModules.js",
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\js\\cssLoader.js",
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\js\\fontsize.js",
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\index.js"
      ],
      "imports": [
        "sap/ui/model/json/JSONModel",
        "sap/ui/core/Fragment"
      ],
      "dynamicImports": [],
      "generated": false,
      "isWebComponent": false,
      "isEntryPoint": true
    },
    {
      "name": "new-npm-package/css/style.css",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\css\\style.css",
      "code": "/* Sadece bizim özel popover'ımızı hedef al */\r\n@import \"./fontsize.css\";\r\n\r\n.popoverModulesPanel.sapMPanel {\r\n    border: 0;\r\n    border-radius: 0;\r\n}\r\n\r\n.popoverModulesPanel .sapMListShowSeparatorsNone .sapMLIBShowSeparator{\r\n    border-bottom: 0\r\n}\r\n\r\n.popoverModulesPanel .sapMPanelWrappingDivTb{\r\n    border-radius: 0 !important;\r\n}\r\n\r\nbody.eye-able-images-hidden img,\r\nbody.eye-able-images-hidden .sapMImg {\r\n  display: none !important;\r\n}\r\n",
      "type": "resource"
    },
    {
      "name": "new-npm-package/Popover.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\Popover.fragment.xml",
      "code": "<core:FragmentDefinition\r\n   xmlns=\"sap.m\"\r\n   xmlns:core=\"sap.ui.core\">\r\n   <Popover\r\n      class=\"myCustomPopover\"\r\n      id=\"npmPopover\"\r\n      placement=\"Bottom\"\r\n      title=\"Eye Able Assistent\"\r\n      contentWidth=\"300px\">\r\n      <content>\r\n         <List\r\n            id=\"modulesList\"\r\n            items=\"{modules>/items}\"\r\n            showSeparators=\"None\"\r\n            backgroundDesign=\"Transparent\">\r\n            <items>\r\n               <CustomListItem>\r\n                  <content>\r\n                     <Panel\r\n                        id=\"{modules>id}\"\r\n                        class=\"popoverModulesPanel\"\r\n                        expandable=\"{modules>expandable}\"\r\n                        backgroundDesign=\"Transparent\"\r\n                        expanded=\"{modules>expanded}\"\r\n                        width=\"auto\">\r\n                        <headerToolbar>\r\n                           <OverflowToolbar press=\".onPanelHeaderPress\">\r\n                              <core:Icon src=\"{modules>icon}\" />\r\n                              <Title text=\"{modules>name}\" />\r\n                           </OverflowToolbar>\r\n                        </headerToolbar>\r\n                        <content visible=\"{= ${modules>expanded} }\">\r\n\r\n                           <VBox justifyContent=\"Center\" alignItems=\"Center\" width=\"100%\"\r\n                              visible=\"{= ${modules>name} === 'Schriftgröße' }\">\r\n                              <Button\r\n                                 id=\"fontStepInput\"\r\n                                 text=\"{settings>/fontStep}\"\r\n                                 width=\"150px\"\r\n                                 textAlign=\"Center\" />\r\n                              <HBox alignItems=\"Center\" width=\"150px\" justifyContent=\"SpaceBetween\">\r\n                                 <Button\r\n                                    id=\"decreaseFontButton\"\r\n                                    icon=\"sap-icon://less\" />\r\n\r\n                                 <Button\r\n                                    id=\"resetFontButton\"\r\n                                    icon=\"sap-icon://refresh\" />\r\n\r\n                                 <Button\r\n                                    id=\"increaseFontButton\"\r\n                                    icon=\"sap-icon://add\" />\r\n                              </HBox>\r\n\r\n                           </VBox>\r\n                        </content>\r\n                     </Panel>\r\n                  </content>\r\n               </CustomListItem>\r\n            </items>\r\n         </List>\r\n      </content>\r\n      <footer>\r\n         <Toolbar>\r\n            <ToolbarSpacer />\r\n            <Button\r\n               id=\"closePopoverButton\"\r\n               text=\"Schließen\" />\r\n         </Toolbar>\r\n      </footer>\r\n   </Popover>\r\n</core:FragmentDefinition>",
      "type": "resource"
    }
  ]
}