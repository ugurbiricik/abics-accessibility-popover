{
  "_entries": [
    {
      "name": "new-npm-package",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\index.js",
      "lastModified": 1750335925686,
      "type": "module",
      "originalName": "index",
      "code": "sap.ui.define(['exports', 'sap/ui/model/json/JSONModel'], (function (exports, JSONModel) { 'use strict';\n\n  const popoverModules = [\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module1\",\r\n      },\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module2\",\r\n      },\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module3\",\r\n      },\r\n      {\r\n        icon: \"sap-icon://add\",\r\n        name: \"module4\",\r\n      },\r\n    ];\n\n  const openPopover = async (controller) => {\r\n      // 1. Fragment'ın ihtiyaç duyacağı olay yöneticisi (event handler) fonksiyonlarını tanımla\r\n      const oFragmentController = {\r\n          \r\n          // Kapatma fonksiyonu\r\n          onCloseDialog: () => {\r\n              // controller.oDialog, ana controller üzerinde sakladığımız diyalog referansıdır.\r\n              // Bu, 'closure' sayesinde çalışır. Fonksiyon, tanımlandığı yerdeki\r\n              // 'controller' değişkenine erişebilir.\r\n              controller.oDialog.close();\r\n          },\r\n\r\n          // Liste elemanına tıklama fonksiyonu\r\n          onModulePress: (oEvent) => {\r\n              const oSelectedItem = oEvent.getSource().getBindingContext(\"modules\").getObject();\r\n              \r\n              // Buradaki mantık tamamen paketin içinde kalır.\r\n              // Kullanıcı bu log'u veya MessageBox'ı görmez (eğer eklersek).\r\n              console.log(`(From inside the package) Module selected: ${oSelectedItem.name}`);\r\n              \r\n              // İstersen burada bir callback fonksiyonu çağırabilirsin,\r\n              // ama şimdilik bu kadar yeterli.\r\n          }\r\n      };\r\n\r\n      // 2. Fragment'ı YÜKLERKEN, 'controller' olarak kendi olay yöneticimizi veriyoruz.\r\n      controller.oDialog ??= await controller.loadFragment({\r\n          name: \"new-npm-package.Popover\",\r\n          controller: oFragmentController // <-- EN ÖNEMLİ KISIM BURASI\r\n      });\r\n\r\n      // 3. Veri modelini oluştur ve diyaloğa bağla (bu kısım aynı kalıyor)\r\n      const aModulesData = popoverModules;\r\n      const oModulesModel = new JSONModel({ items: aModulesData });\r\n      controller.oDialog.setModel(oModulesModel, \"modules\");\r\n\r\n      // 4. Diyaloğu aç\r\n      controller.oDialog.open();\r\n  };\n\n  const __esModule = true ;\n\n  exports.__esModule = __esModule;\n  exports.openPopover = openPopover;\n\n}));\n",
      "relatedPaths": [
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\popoverModules.js",
        "C:\\Users\\UgurBiricik\\Desktop\\ts\\package\\index.js"
      ],
      "imports": [
        "sap/ui/model/json/JSONModel"
      ],
      "dynamicImports": [],
      "generated": false,
      "isWebComponent": false,
      "isEntryPoint": true
    }
  ]
}