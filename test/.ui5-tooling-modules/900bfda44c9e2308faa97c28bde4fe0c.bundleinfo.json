{
  "_entries": [
    {
      "name": "ui5-smart-access",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\index.js",
      "lastModified": 1753350024707,
      "type": "module",
      "originalName": "index",
      "code": "sap.ui.define(['exports', 'sap/ui/model/json/JSONModel', 'sap/ui/model/resource/ResourceModel', 'sap/ui/core/Fragment'], (function (exports, JSONModel, ResourceModel, Fragment) { 'use strict';\n\n    let i18nModel = null;\r\n\r\n    /**\r\n     * Tarayıcının dil ayarlarını algılar ve desteklenen dilleri kontrol eder\r\n     * @returns {string} Desteklenen dil kodu (en, de, tr vb.)\r\n     */\r\n    function detectBrowserLanguage() {\r\n        // Desteklenen diller\r\n        const supportedLanguages = ['en', 'de'];\r\n        \r\n        // Tarayıcının dil tercihleri\r\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage];\r\n        \r\n        // İlk olarak tam eşleşme ara\r\n        for (const lang of browserLanguages) {\r\n            const cleanLang = lang.split('-')[0].toLowerCase();\r\n            if (supportedLanguages.includes(cleanLang)) {\r\n                return cleanLang;\r\n            }\r\n        }\r\n        \r\n        // Varsayılan dil olarak Almanca döndür (mevcut uygulama Almanca)\r\n        return 'de';\r\n    }\r\n\r\n    /**\r\n     * I18n modelini oluşturur ve döndürür\r\n     * @returns {sap.ui.model.resource.ResourceModel} I18n model\r\n     */\r\n    function createI18nModel() {\r\n        if (i18nModel) {\r\n            return i18nModel;\r\n        }\r\n        \r\n        const detectedLanguage = detectBrowserLanguage();\r\n        console.log(`[ui5-smart-access] Detected language: ${detectedLanguage}`);\r\n        \r\n        try {\r\n            // Farklı bundle name formatlarını dene\r\n            const bundleNames = [\r\n                \"ui5-smart-access.i18n.i18n\",\r\n                \"ui5-smart-access/i18n/i18n\", \r\n                \"./i18n/i18n\"\r\n            ];\r\n            \r\n            for (const bundleName of bundleNames) {\r\n                try {\r\n                    console.log(`[ui5-smart-access] Trying bundle name: ${bundleName}`);\r\n                    \r\n                    i18nModel = new ResourceModel({\r\n                        bundleName: bundleName,\r\n                        supportedLocales: [\"en\", \"de\", \"\"],\r\n                        locale: detectedLanguage,\r\n                        fallbackLocale: \"de\"\r\n                    });\r\n                    \r\n                    // Test et - bir key çekmeye çalış\r\n                    const resourceBundle = i18nModel.getResourceBundle();\r\n                    if (resourceBundle) {\r\n                        const testText = resourceBundle.getText(\"fontSize.title\");\r\n                        if (testText && testText !== \"fontSize.title\") {\r\n                            console.log(`[ui5-smart-access] Successfully loaded with bundle: ${bundleName}`);\r\n                            console.log(`[ui5-smart-access] Test text: ${testText}`);\r\n                            return i18nModel;\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.warn(`[ui5-smart-access] Failed with bundle ${bundleName}:`, error);\r\n                    continue;\r\n                }\r\n            }\r\n            \r\n            throw new Error(\"All bundle names failed\");\r\n            \r\n        } catch (error) {\r\n            console.error(`[ui5-smart-access] Error creating i18n model:`, error);\r\n            \r\n            // En basit fallback\r\n            i18nModel = new ResourceModel({\r\n                bundleName: \"ui5-smart-access.i18n.i18n\",\r\n                supportedLocales: [\"en\", \"de\"],\r\n                locale: detectedLanguage,\r\n                fallbackLocale: \"de\"\r\n            });\r\n        }\r\n        \r\n        return i18nModel;\r\n    }\r\n\r\n    /**\r\n     * Belirli bir key için çeviri metni alır\r\n     * @param {string} key I18n key\r\n     * @param {Array} parameters Parametreler (opsiyonel)\r\n     * @returns {string} Çeviri metni\r\n     */\r\n    function getText(key, parameters = []) {\r\n        if (!i18nModel) {\r\n            console.warn(`[ui5-smart-access] I18n model not initialized, returning key: ${key}`);\r\n            return key;\r\n        }\r\n        \r\n        try {\r\n            const resourceBundle = i18nModel.getResourceBundle();\r\n            if (resourceBundle) {\r\n                const text = resourceBundle.getText(key, parameters);\r\n                if (text && text !== key) {\r\n                    return text;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(`[ui5-smart-access] Error getting text for key '${key}':`, error);\r\n        }\r\n        \r\n        // Fallback - key'i döndür\r\n        console.warn(`[ui5-smart-access] No translation found for key: ${key}`);\r\n        return key;\r\n    }\n\n    /**\r\n     * Popover modülleri listesini döndürür\r\n     * @returns {Array} Modül listesi\r\n     */\r\n    function getPopoverModules() {\r\n      return [\r\n        {\r\n          id: \"fontSize\",\r\n          icon: \"sap-icon://text-formatting\",\r\n          name: getText(\"fontSize.title\"),\r\n          expandable: true,\r\n          expanded: false,\r\n        },\r\n\r\n        {\r\n          id: \"contrast\",\r\n          icon: \"sap-icon://microphone\",\r\n          name: getText(\"tts.title\"),\r\n          expandable: true,\r\n          expanded: false,\r\n        },\r\n        {\r\n          id: \"colorBlindness\",\r\n          icon: \"sap-icon://palette\",\r\n          name: getText(\"colorBlindness.title\"),\r\n          expandable: true,\r\n          expanded: false,\r\n        },\r\n        {\r\n          id: \"blauFilter\",\r\n          icon: \"sap-icon://light-mode\",\r\n          name: getText(\"blueFilter.activate\"),\r\n          expandable: true,\r\n          expanded: false,\r\n        },\r\n        {\r\n          id: \"darkMode\",\r\n          icon: \"sap-icon://paint-bucket\",\r\n          name: getText(\"contrastMode.activate\"),\r\n          expandable: false,\r\n          expanded: false,\r\n        },\r\n\r\n        {\r\n          id: \"nightMode\",\r\n          icon: \"sap-icon://dark-mode\",\r\n          name: getText(\"nightMode.activate\"),\r\n          expandable: false,\r\n          expanded: false,\r\n        },\r\n\r\n        {\r\n          id: \"tabNavigation\",\r\n          icon: \"sap-icon://keyboard-and-mouse\",\r\n          name: getText(\"tabNavigation.title\"),\r\n          expandable: false,\r\n          expanded: false,\r\n        },\r\n\r\n        {\r\n          id: \"toggleImages\",\r\n          icon: \"sap-icon://picture\",\r\n          name: getText(\"toggleImages.hide\"),\r\n          expandable: false,\r\n          expanded: false,\r\n        },\r\n      ];\r\n    }\n\n    let isCustomStyleLoaded = false;\r\n    function loadCustomStyleOnce() {\r\n      if (isCustomStyleLoaded) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const sCorrectPath = sap.ui.require.toUrl(\"ui5-smart-access/css/style.css\");\r\n\r\n        const link = document.createElement(\"link\");\r\n        link.id = \"ui5-smart-access-styles\";\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.href = sCorrectPath;\r\n        document.head.appendChild(link);\r\n        \r\n        isCustomStyleLoaded = true;\r\n      } catch (error) {\r\n          console.error(\"Failed to load custom CSS:\", error);\r\n      }\r\n    }\n\n    let _defaultFontSize = null;\r\n\r\n    let _settingsModel = null;\r\n\r\n\r\n    const initFontSizer = (oSettingsModel) => {\r\n        if (!_defaultFontSize) {\r\n            _defaultFontSize = window.getComputedStyle(document.documentElement).getPropertyValue(\"font-size\");\r\n        }\r\n        _settingsModel = oSettingsModel;\r\n    };\r\n\r\n\r\n    const _updateView = () => {\r\n        if (_settingsModel && _defaultFontSize) {\r\n            const step = _settingsModel.getProperty(\"/fontStep\");\r\n            const newSize = `calc(${_defaultFontSize} + ${step * 2}px)`;\r\n            document.documentElement.style.fontSize = newSize;\r\n        }\r\n    };\r\n\r\n\r\n    const onIncreaseFontSize = () => {\r\n        if (!_settingsModel) return;\r\n        let currentStep = _settingsModel.getProperty(\"/fontStep\");\r\n        if (currentStep < 5) {\r\n            _settingsModel.setProperty(\"/fontStep\", currentStep + 1);\r\n            _updateView();\r\n        }\r\n    };\r\n\r\n\r\n    const onDecreaseFontSize = () => {\r\n        if (!_settingsModel) return;\r\n        let currentStep = _settingsModel.getProperty(\"/fontStep\");\r\n            if (currentStep > -3) {\r\n            _settingsModel.setProperty(\"/fontStep\", currentStep - 1);\r\n            _updateView();\r\n        }\r\n    };\r\n\r\n    const onResetFontSize = () => {\r\n        if (!_settingsModel) return;\r\n        _settingsModel.setProperty(\"/fontStep\", 0);\r\n        document.documentElement.style.fontSize = _defaultFontSize;\r\n    };\n\n    let synth = window.speechSynthesis;\r\n    let utterance = null;\r\n    let isReading = false;\r\n    let settingsModel = null;\r\n\r\n    const initTextToSpeech = (oSettingsModel) => {\r\n        settingsModel = oSettingsModel;\r\n    };\r\n\r\n    const startReading = () => {\r\n        if (isReading) return;\r\n        stopReading();\r\n        const text = document.body.innerText;\r\n        utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.rate = settingsModel?.getProperty(\"/ttsRate\") || 1;\r\n        utterance.volume = settingsModel?.getProperty(\"/ttsVolume\") || 1;\r\n        synth.speak(utterance);\r\n        isReading = true;\r\n        utterance.onend = () => { isReading = false; };\r\n    };\r\n\r\n    const stopReading = () => {\r\n        if (synth.speaking) synth.cancel();\r\n        isReading = false;\r\n    };\r\n\r\n    const setTTSRate = (rate) => {\r\n        settingsModel?.setProperty(\"/ttsRate\", rate);\r\n    };\r\n\r\n    const setTTSVolume = (volume) => {\r\n        settingsModel?.setProperty(\"/ttsVolume\", volume);\r\n    };\r\n\r\n    let hoverActive = false;\r\n    function hoverHandler(e) {\r\n        if (e.target && e.target.innerText) {\r\n            stopReading();\r\n            utterance = new SpeechSynthesisUtterance(e.target.innerText);\r\n            utterance.rate = settingsModel?.getProperty(\"/ttsRate\") || 1;\r\n            utterance.volume = settingsModel?.getProperty(\"/ttsVolume\") || 1;\r\n            synth.speak(utterance);\r\n        }\r\n    }\r\n\r\n    const enableHoverRead = () => {\r\n        if (!hoverActive) {\r\n            document.body.addEventListener(\"mouseover\", hoverHandler);\r\n            hoverActive = true;\r\n        }\r\n    };\r\n\r\n    const disableHoverRead = () => {\r\n        if (hoverActive) {\r\n            document.body.removeEventListener(\"mouseover\", hoverHandler);\r\n            hoverActive = false;\r\n        }\r\n    };\n\n    const FILTERS = {\r\n        none: '',\r\n        protanopia: 'url(#protanopia)',\r\n        deuteranopia: 'url(#deuteranopia)',\r\n        tritanopia: 'url(#tritanopia)',\r\n        achromatopsia: 'grayscale(1)'\r\n    };\r\n\r\n\r\n    function injectSVGFilters() {\r\n        if (document.getElementById('color-blindness-filters')) return;\r\n        const svgNS = 'http://www.w3.org/2000/svg';\r\n        const svg = document.createElementNS(svgNS, 'svg');\r\n        svg.setAttribute('id', 'color-blindness-filters');\r\n        svg.setAttribute('style', 'position:absolute;width:0;height:0;');\r\n        svg.innerHTML = `\r\n      <filter id=\"protanopia\">\r\n        <feColorMatrix type=\"matrix\" values=\"0.567 0.433 0 0 0 0.558 0.442 0 0 0 0 0.242 0.758 0 0 0 0 0 1 0\"/>\r\n      </filter>\r\n      <filter id=\"deuteranopia\">\r\n        <feColorMatrix type=\"matrix\" values=\"0.625 0.375 0 0 0 0.7 0.3 0 0 0 0 0.3 0.7 0 0 0 0 0 1 0\"/>\r\n      </filter>\r\n      <filter id=\"tritanopia\">\r\n        <feColorMatrix type=\"matrix\" values=\"0.95 0.05 0 0 0 0 0.433 0.567 0 0 0 0.475 0.525 0 0 0 0 0 1 0\"/>\r\n      </filter>\r\n    `;\r\n        document.body.appendChild(svg);\r\n    }\r\n\r\n    const applyColorBlindness = (type) => {\r\n        injectSVGFilters();\r\n        const filter = FILTERS[type] || '';\r\n        document.documentElement.style.filter = filter;\r\n    };\r\n\r\n    const resetColorBlindness = () => {\r\n        document.documentElement.style.filter = '';\r\n    };\n\n    function getFilter(level) {\r\n        const sepia = (level / 100) * 0.6;\r\n        const hue = -20 * (level / 100);\r\n        const brightness = 1 - (level / 100) * 0.1;\r\n        return `brightness(${brightness}) sepia(${sepia}) hue-rotate(${hue}deg)`;\r\n    }\r\n\r\n    const enableBlueLightFilter = (level = 50) => {\r\n        document.documentElement.style.filter = getFilter(level);\r\n    };\r\n\r\n    const disableBlueLightFilter = () => {\r\n        document.documentElement.style.filter = '';\r\n    };\n\n    let isDarkMode = false;\r\n\r\n    const toggleNightMode = () => {\r\n        isDarkMode = !isDarkMode;\r\n        if (isDarkMode) {\r\n            sap.ui.getCore().applyTheme(\"sap_horizon_dark\");\r\n        } else {\r\n            sap.ui.getCore().applyTheme(\"sap_horizon\");\r\n        }\r\n        return isDarkMode;\r\n    };\r\n\r\n    const disableNightMode = () => {\r\n        if (isDarkMode) {\r\n            sap.ui.getCore().applyTheme(\"sap_horizon\");\r\n            isDarkMode = false;\r\n        }\r\n    };\n\n    const STORAGE_KEY = \"eye-able-images-hidden\";\r\n\r\n    let imagesHidden = false;\r\n    let observer = null;\r\n\r\n    function setVisibilityAll(selector, value) {\r\n        document.querySelectorAll(selector).forEach(el => el.style.visibility = value);\r\n    }\r\n\r\n    function setVisibilityBackgroundImage(value) {\r\n        document.querySelectorAll('[style*=\"background-image\"]').forEach(el => el.style.visibility = value);\r\n    }\r\n\r\n    function setVisibilityInShadowRoots(value) {\r\n        document.querySelectorAll('*').forEach(el => {\r\n            if (el.shadowRoot) {\r\n                el.shadowRoot.querySelectorAll('img,svg,.sapUiIcon,.sapMImg,.sapMBtnIcon,.sapFAvatar,.sapMIllustratedMessage-illu').forEach(shEl => shEl.style.visibility = value);\r\n                el.shadowRoot.querySelectorAll('[style*=\"background-image\"]').forEach(shEl => shEl.style.visibility = value);\r\n            }\r\n        });\r\n    }\r\n\r\n    const toggleImages = () => {\r\n        imagesHidden = !imagesHidden;\r\n        if (imagesHidden) {\r\n            hideImages();\r\n            startImageObserver();\r\n        } else {\r\n            showImages();\r\n            stopImageObserver();\r\n        }\r\n        localStorage.setItem(STORAGE_KEY, imagesHidden);\r\n        console.log(`Images are now ${imagesHidden ? 'hidden' : 'visible'}.`);\r\n        return imagesHidden;\r\n    };\r\n\r\n    const hideImages = () => {\r\n        setVisibilityAll('img', 'hidden');\r\n        setVisibilityAll('svg', 'hidden');\r\n        setVisibilityAll('.sapMImg', 'hidden');\r\n        setVisibilityAll('.sapMBtnIcon', 'hidden');\r\n        setVisibilityAll('.sapUiIcon', 'hidden');\r\n        setVisibilityAll('.sapFAvatar', 'hidden');\r\n        setVisibilityAll('.sapMIllustratedMessage-illu', 'hidden');\r\n        setVisibilityBackgroundImage('hidden');\r\n        setVisibilityInShadowRoots('hidden');\r\n    };\r\n\r\n    const showImages = () => {\r\n        setVisibilityAll('img', '');\r\n        setVisibilityAll('svg', '');\r\n        setVisibilityAll('.sapMImg', '');\r\n        setVisibilityAll('.sapMBtnIcon', '');\r\n        setVisibilityAll('.sapUiIcon', '');\r\n        setVisibilityAll('.sapFAvatar', '');\r\n        setVisibilityAll('.sapMIllustratedMessage-illu', '');\r\n        setVisibilityBackgroundImage('');\r\n        setVisibilityInShadowRoots('');\r\n    };\r\n\r\n    const startImageObserver = () => {\r\n        if (observer) return;\r\n        observer = new MutationObserver(() => {\r\n            if (imagesHidden) hideImages();\r\n        });\r\n        observer.observe(document.body, { childList: true, subtree: true });\r\n    };\r\n\r\n    const stopImageObserver = () => {\r\n        if (observer) observer.disconnect();\r\n        observer = null;\r\n    };\n\n    let contrastActive = false;\r\n\r\n    const toggleContrastMode = () => {\r\n        contrastActive = !contrastActive;\r\n        if (contrastActive) {\r\n            document.body.style.filter = 'invert(1) grayscale(1)';\r\n            document.body.style.backgroundColor = '#000';\r\n            document.body.style.color = '#fff';\r\n        } else {\r\n            document.body.style.filter = '';\r\n            document.body.style.backgroundColor = '';\r\n            document.body.style.color = '';\r\n        }\r\n        return contrastActive;\r\n    };\r\n\r\n    const isContrastModeActive = () => contrastActive;\n\n    const resetAll = () => {\r\n        onResetFontSize();\r\n        stopReading();\r\n        setTTSRate(1);\r\n        setTTSVolume(1);\r\n        disableHoverRead();\r\n        resetColorBlindness();\r\n        disableBlueLightFilter();\r\n        disableNightMode();\r\n        showImages();\r\n        if (isContrastModeActive()) toggleContrastMode();\r\n    };\n\n    const oSettingsModel = new JSONModel({\r\n        fontStep: 0,\r\n        ttsRate: 1,\r\n        ttsVolume: 1,\r\n        ttsHover: false,\r\n        colorBlindnessType: 'none',\r\n        blueLightFilterLevel: 50,\r\n        blueLightFilterActive: false,\r\n        fontSizeExpanded: false,\r\n        ttsExpanded: false,\r\n        colorBlindnessExpanded: false,\r\n        blaufilterExpanded: false,\r\n        nightModeActive: false,\r\n        toggleImagesActive: false,\r\n        contrastModeActive: false,\r\n        contrastModeExpanded: false,\r\n        contrastBgColor: \"#000000\",\r\n        contrastTextColor: \"#FFFFFF\",\r\n        contrastRatio: \"21:1\",\r\n        contrastReadable: \"LESBAR?\",\r\n        contrastUnderlineLinks: true\r\n    });\r\n\r\n    const popoverInternalController = {\r\n        onFontSizeToolbarPress: function () {\r\n            const expanded = oSettingsModel.getProperty(\"/fontSizeExpanded\");\r\n            oSettingsModel.setProperty(\"/fontSizeExpanded\", !expanded);\r\n        },\r\n        onTTSToolbarPress: function () {\r\n            const expanded = oSettingsModel.getProperty(\"/ttsExpanded\");\r\n            oSettingsModel.setProperty(\"/ttsExpanded\", !expanded);\r\n        },\r\n        onColorBlindnessToolbarPress: function () {\r\n            const expanded = oSettingsModel.getProperty(\"/colorBlindnessExpanded\");\r\n            oSettingsModel.setProperty(\"/colorBlindnessExpanded\", !expanded);\r\n        },\r\n        onBlaufilterToolbarPress: function () {\r\n            const expanded = oSettingsModel.getProperty(\"/blaufilterExpanded\");\r\n            oSettingsModel.setProperty(\"/blaufilterExpanded\", !expanded);\r\n            if (!expanded) {\r\n                enableBlueLightFilter(oSettingsModel.getProperty(\"/blueLightFilterLevel\"));\r\n                oSettingsModel.setProperty(\"/blueLightFilterActive\", true);\r\n            } else {\r\n                disableBlueLightFilter();\r\n                oSettingsModel.setProperty(\"/blueLightFilterActive\", false);\r\n            }\r\n        },\r\n        onNightModeToolbarPress: function () {\r\n            const active = toggleNightMode();\r\n            oSettingsModel.setProperty(\"/nightModeActive\", active);\r\n        },\r\n        onToggleImagesToolbarPress: function () {\r\n            const active = toggleImages();\r\n            oSettingsModel.setProperty(\"/toggleImagesActive\", active);\r\n        },\r\n        onContrastModeToolbarPress: function () {\r\n            const active = toggleContrastMode();\r\n            oSettingsModel.setProperty(\"/contrastModeActive\", active);\r\n        },\r\n        onResetAllToolbarPress: function () {\r\n            resetAll();\r\n            oSettingsModel.setProperty(\"/fontStep\", 0);\r\n            oSettingsModel.setProperty(\"/ttsRate\", 1);\r\n            oSettingsModel.setProperty(\"/ttsVolume\", 1);\r\n            oSettingsModel.setProperty(\"/ttsHover\", false);\r\n            oSettingsModel.setProperty(\"/colorBlindnessType\", 'none');\r\n            oSettingsModel.setProperty(\"/blueLightFilterLevel\", 50);\r\n            oSettingsModel.setProperty(\"/blueLightFilterActive\", false);\r\n            oSettingsModel.setProperty(\"/fontSizeExpanded\", false);\r\n            oSettingsModel.setProperty(\"/ttsExpanded\", false);\r\n            oSettingsModel.setProperty(\"/colorBlindnessExpanded\", false);\r\n            oSettingsModel.setProperty(\"/blaufilterExpanded\", false);\r\n            oSettingsModel.setProperty(\"/nightModeActive\", false);\r\n            oSettingsModel.setProperty(\"/toggleImagesActive\", false);\r\n            oSettingsModel.setProperty(\"/contrastModeActive\", false);\r\n        },\r\n        onContrastPresetPress: function (oEvent) {\r\n            const key = oEvent.getSource().getCustomData()[0].getValue();\r\n            let bg = \"#000000\", text = \"#FFFFFF\";\r\n            if (key === \"black-white\") { bg = \"#000000\"; text = \"#FFFFFF\"; }\r\n            if (key === \"yellow-black\") { bg = \"#FFFF00\"; text = \"#000000\"; }\r\n            if (key === \"red-black\") { bg = \"#FF0000\"; text = \"#000000\"; }\r\n            if (key === \"green-black\") { bg = \"#00FF00\"; text = \"#000000\"; }\r\n            oSettingsModel.setProperty(\"/contrastBgColor\", bg);\r\n            oSettingsModel.setProperty(\"/contrastTextColor\", text);\r\n            updateContrastPreview();\r\n        },\r\n        onContrastApply: function () {\r\n            applyContrastToDOM(\r\n                oSettingsModel.getProperty(\"/contrastBgColor\"),\r\n                oSettingsModel.getProperty(\"/contrastTextColor\"),\r\n                oSettingsModel.getProperty(\"/contrastUnderlineLinks\")\r\n            );\r\n            oSettingsModel.setProperty(\"/contrastModeActive\", true);\r\n        },\r\n        onContrastReset: function () {\r\n            removeContrastFromDOM();\r\n            oSettingsModel.setProperty(\"/contrastBgColor\", \"#000000\");\r\n            oSettingsModel.setProperty(\"/contrastTextColor\", \"#FFFFFF\");\r\n            oSettingsModel.setProperty(\"/contrastUnderlineLinks\", true);\r\n            oSettingsModel.setProperty(\"/contrastModeActive\", false);\r\n            updateContrastPreview();\r\n        },\r\n        onUnderlineLinksToggle: function (oEvent) {\r\n            oSettingsModel.setProperty(\"/contrastUnderlineLinks\", oEvent.getParameter(\"selected\"));\r\n            updateContrastPreview();\r\n        },\r\n        onPopoverClosePress: function (oEvent) {\r\n            let oPopover = oEvent.getSource().getParent();\r\n            while (oPopover && !(oPopover.isA && oPopover.isA(\"sap.m.Popover\"))) {\r\n                oPopover = oPopover.getParent && oPopover.getParent();\r\n            }\r\n            if (oPopover && oPopover.close) {\r\n                oPopover.close();\r\n            }\r\n        }\r\n    };\r\n\r\n    const openAccessPopover = async (controller, oEvent) => {\r\n        // DEBUG: Parameter checks\r\n        if (!controller || typeof controller.getView !== \"function\") {\r\n            console.error(\"[ui5-smart-access] ERROR: The controller parameter must be a UI5 Controller!\", controller);\r\n            throw new Error(\"The controller parameter must be a UI5 Controller!\");\r\n        }\r\n        if (!oEvent || typeof oEvent.getSource !== \"function\") {\r\n            console.error(\"[ui5-smart-access] ERROR: The oEvent parameter must be a UI5 Event!\", oEvent);\r\n            throw new Error(\"The oEvent parameter must be a UI5 Event!\");\r\n        }\r\n        const oView = controller.getView();\r\n        const sFragmentId = oView.getId();\r\n\r\n        if (!controller._pPopover) {\r\n            console.debug(\"[ui5-smart-access] Popover is being loaded for the first time.\");\r\n            loadCustomStyleOnce();\r\n            initFontSizer(oSettingsModel);\r\n            initTextToSpeech(oSettingsModel);\r\n\r\n            // I18n modelini oluştur\r\n            const i18nModel = createI18nModel();\r\n\r\n            controller._pPopover = Fragment.load({\r\n                id: sFragmentId,\r\n                name: \"ui5-smart-access.Popover\",\r\n                controller: popoverInternalController\r\n            }).then((oPopover) => {\r\n                if (!oPopover) {\r\n                    console.error(\"[ui5-smart-access] ERROR: Fragment could not be loaded!\");\r\n                    throw new Error(\"Popover Fragment could not be loaded!\");\r\n                }\r\n                oView.addDependent(oPopover);\r\n\r\n                try {\r\n                    oPopover.setModel(oSettingsModel, \"settings\");\r\n                    oPopover.setModel(i18nModel, \"i18n\");\r\n                    console.log(\"[ui5-smart-access] I18n model successfully assigned to popover\");\r\n                } catch (err) {\r\n                    console.error(\"[ui5-smart-access] ERROR: Model could not be assigned!\", err);\r\n                }\r\n\r\n                const closeButton = Fragment.byId(sFragmentId, \"closePopoverButton\");\r\n                const increaseButton = Fragment.byId(sFragmentId, \"increaseFontButton\");\r\n                const decreaseButton = Fragment.byId(sFragmentId, \"decreaseFontButton\");\r\n                const resetButton = Fragment.byId(sFragmentId, \"resetFontButton\");\r\n\r\n                if (!closeButton) console.warn(\"[ui5-smart-access] WARNING: closePopoverButton not found!\");\r\n                if (!increaseButton) console.warn(\"[ui5-smart-access] WARNING: increaseFontButton not found!\");\r\n                if (!decreaseButton) console.warn(\"[ui5-smart-access] WARNING: decreaseFontButton not found!\");\r\n                if (!resetButton) console.warn(\"[ui5-smart-access] WARNING: resetFontButton not found!\");\r\n\r\n                closeButton?.attachPress(() => oPopover.close());\r\n                increaseButton?.attachPress(onIncreaseFontSize);\r\n                decreaseButton?.attachPress(onDecreaseFontSize);\r\n                resetButton?.attachPress(onResetFontSize);\r\n\r\n                const ttsStartButton = Fragment.byId(sFragmentId, \"ttsStartButton\");\r\n                const ttsStopButton = Fragment.byId(sFragmentId, \"ttsStopButton\");\r\n                const ttsRateSlider = Fragment.byId(sFragmentId, \"ttsRateSlider\");\r\n                const ttsVolumeSlider = Fragment.byId(sFragmentId, \"ttsVolumeSlider\");\r\n                const ttsHoverSwitch = Fragment.byId(sFragmentId, \"ttsHoverSwitch\");\r\n\r\n                ttsStartButton?.attachPress(startReading);\r\n                ttsStopButton?.attachPress(stopReading);\r\n                ttsRateSlider?.attachChange((e) => setTTSRate(e.getParameter(\"value\")));\r\n                ttsVolumeSlider?.attachChange((e) => setTTSVolume(e.getParameter(\"value\")));\r\n                ttsHoverSwitch?.attachChange((e) => {\r\n                    const active = e.getParameter(\"state\");\r\n                    oSettingsModel.setProperty(\"/ttsHover\", active);\r\n                    if (active) enableHoverRead(); else disableHoverRead();\r\n                });\r\n\r\n                const colorBlindnessSelect = Fragment.byId(sFragmentId, \"colorBlindnessSelect\");\r\n                const colorBlindnessResetButton = Fragment.byId(sFragmentId, \"colorBlindnessResetButton\");\r\n                colorBlindnessSelect?.attachChange((e) => {\r\n                    const type = e.getParameter(\"selectedItem\").getKey();\r\n                    oSettingsModel.setProperty(\"/colorBlindnessType\", type);\r\n                    applyColorBlindness(type);\r\n                });\r\n                colorBlindnessResetButton?.attachPress(() => {\r\n                    oSettingsModel.setProperty(\"/colorBlindnessType\", \"none\");\r\n                    resetColorBlindness();\r\n                });\r\n\r\n                const blueLightFilterSlider = Fragment.byId(sFragmentId, \"blueLightFilterSlider\");\r\n                const blueLightFilterResetButton = Fragment.byId(sFragmentId, \"blueLightFilterResetButton\");\r\n                blueLightFilterSlider?.attachChange((e) => {\r\n                    const level = e.getParameter(\"value\");\r\n                    oSettingsModel.setProperty(\"/blueLightFilterLevel\", level);\r\n                    enableBlueLightFilter(level);\r\n                });\r\n                blueLightFilterResetButton?.attachPress(() => {\r\n                    oSettingsModel.setProperty(\"/blueLightFilterLevel\", 0);\r\n                    disableBlueLightFilter();\r\n                });\r\n\r\n                const blueLightFilterHeaderButton = Fragment.byId(sFragmentId, \"blueLightFilterHeaderButton\");\r\n                blueLightFilterHeaderButton?.attachPress(() => {\r\n                    const active = oSettingsModel.getProperty(\"/blueLightFilterActive\");\r\n                    if (!active) {\r\n                        enableBlueLightFilter(oSettingsModel.getProperty(\"/blueLightFilterLevel\"));\r\n                    } else {\r\n                        disableBlueLightFilter();\r\n                    }\r\n                    oSettingsModel.setProperty(\"/blueLightFilterActive\", !active);\r\n                });\r\n\r\n                oPopover.onPanelHeaderPress = function (oEvent) {\r\n                    const context = oEvent.getSource().getBindingContext(\"modules\");\r\n                    if (context) {\r\n                        const name = context.getProperty(\"name\");\r\n                        const expanded = context.getProperty(\"expanded\");\r\n                        context.getModel().setProperty(context.getPath() + \"/expanded\", !expanded);\r\n                        // Blaufilter kontrolü i18n ile\r\n                        if (name === getText(\"blueFilter.activate\") || name === getText(\"blueFilter.deactivate\")) {\r\n                            if (!expanded) {\r\n                                const level = oSettingsModel.getProperty(\"/blueLightFilterLevel\");\r\n                                enableBlueLightFilter(level);\r\n                            } else {\r\n                                disableBlueLightFilter();\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return oPopover;\r\n            }).catch((err) => {\r\n                console.error(\"[ui5-smart-access] ERROR: Error occurred during Fragment.load!\", err);\r\n                throw err;\r\n            });\r\n        }\r\n\r\n        const oPopover = await controller._pPopover;\r\n\r\n        try {\r\n            // Popover modüllerini dinamik olarak al\r\n            oPopover.setModel(new JSONModel({ items: getPopoverModules() }), \"modules\");\r\n        } catch (err) {\r\n            console.error(\"[ui5-smart-access] ERROR: Modules model could not be assigned!\", err);\r\n        }\r\n        try {\r\n            oPopover.openBy(oEvent.getSource());\r\n        } catch (err) {\r\n            console.error(\"[ui5-smart-access] ERROR: Error during openBy!\", err);\r\n        }\r\n    };\r\n\r\n    function updateContrastPreview() {\r\n        const bg = oSettingsModel.getProperty(\"/contrastBgColor\");\r\n        const text = oSettingsModel.getProperty(\"/contrastTextColor\");\r\n        const ratio = getContrastRatio(bg, text);\r\n        oSettingsModel.setProperty(\"/contrastRatio\", ratio.ratioText);\r\n        oSettingsModel.setProperty(\"/contrastReadable\", ratio.readable ? getText(\"contrast.readable\") : getText(\"contrast.notReadable\"));\r\n    }\r\n    function getContrastRatio(bg, text) {\r\n        function luminance(hex) {\r\n            let c = hex.replace('#', '');\r\n            if (c.length === 3) c = c.split('').map(x => x + x).join('');\r\n            const rgb = [0, 1, 2].map(i => parseInt(c.substr(i * 2, 2), 16) / 255);\r\n            const lum = rgb.map(v => v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4));\r\n            return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n        }\r\n        const l1 = luminance(bg);\r\n        const l2 = luminance(text);\r\n        const ratio = (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\r\n        return { ratioText: ratio.toFixed(1) + \":1\", readable: ratio >= 4.5 };\r\n    }\r\n    function applyContrastToDOM(bg, text, underlineLinks) {\r\n        document.body.style.backgroundColor = bg;\r\n        document.body.style.color = text;\r\n        Array.from(document.querySelectorAll('a')).forEach(a => {\r\n            a.style.textDecoration = underlineLinks ? 'underline' : 'none';\r\n            a.style.color = text;\r\n        });\r\n    }\r\n    function removeContrastFromDOM() {\r\n        document.body.style.backgroundColor = '';\r\n        document.body.style.color = '';\r\n        Array.from(document.querySelectorAll('a')).forEach(a => {\r\n            a.style.textDecoration = '';\r\n            a.style.color = '';\r\n        });\r\n    }\n\n    const __esModule = true ;\n\n    exports.__esModule = __esModule;\n    exports.openAccessPopover = openAccessPopover;\n\n}));\n",
      "relatedPaths": [
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\i18nModel.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\popoverModules.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\cssLoader.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\fontsize.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\textToSpeech.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\colorBlindness.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\blueLightFilter.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\nightMode.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\imageHider.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\contrast.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\js\\resetAll.js",
        "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\index.js"
      ],
      "imports": [
        "sap/ui/model/json/JSONModel",
        "sap/ui/model/resource/ResourceModel",
        "sap/ui/core/Fragment"
      ],
      "dynamicImports": [],
      "generated": false,
      "isWebComponent": false,
      "isEntryPoint": true
    },
    {
      "name": "ui5-smart-access/css/style.css",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\css\\style.css",
      "code": ".abicsAccessibilityPopover * {\r\n  border: 0 0 0 1px solid rgba(0, 57, 133, 0.863) !important;\r\n  border-radius: 0 !important;\r\n  box-shadow: none !important;\r\n  background-color: whitesmoke !important;\r\n  color: rgba(0, 57, 133, 0.863) !important;\r\n\r\n\r\n}\r\n\r\n.abicsAccessibilityPopover {\r\n  border-radius: 10px !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPopoverWrapper {\r\n  border-radius: 10px !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanelContent:not(.sapMPanelBGTransparent) {\r\n  border-bottom: 0 !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanel.resetAllPanel .sapMTB.sapMTBStandard {\r\n  border: 0 !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanelContent .sapMBtnInner .sapUiIcon {\r\n  border: 0 !important;\r\n  border-radius: 7px !important;\r\n\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanelContent .sapMBtnInner {\r\n  border: 1px solid rgba(0, 57, 133, 0.863) !important;\r\n  border-radius: 7px !important;\r\n}\r\n\r\n\r\n.abicsAccessibilityPopover .sapMPanelContent .sapMSlt {\r\n  border: 1px solid rgba(0, 57, 133, 0.863) !important;\r\n  border-radius: 7px !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanel .sapMTB.sapMPanelHeaderTB {\r\n  background-color: whitesmoke !important;\r\n  color: rgba(0, 57, 133, 0.863) !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanel .sapMTB.sapMPanelHeaderTB .sapMTitle,\r\n.abicsAccessibilityPopover .sapMPanel .sapMTB.sapMPanelHeaderTB .sapUiIcon {\r\n  color: rgba(0, 57, 133, 0.863) !important;\r\n  background-color: whitesmoke !important;\r\n\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPanelContent {\r\n  padding: 3px !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMSliderProgress,\r\n.abicsAccessibilityPopover .sapMSliderInner {\r\n  background-color: rgba(0, 57, 133, 0.863) !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMSwtLabel {\r\n  background-color: rgba(0, 57, 133, 0.863) !important;\r\n  color: whitesmoke !important;\r\n  border-radius: 7px !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMSwt {\r\n  border-radius: 7px !important;\r\n  border: 0 !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMSwtInner .sapMSwtHandle {\r\n  background-color: rgba(0, 57, 133, 0.863) !important;\r\n  border-radius: 7px !important;\r\n  border: 0 !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMSwtText {\r\n  border-radius: 7px !important;\r\n  border: 0 !important;\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPopoverHeader .sapMBarContainer *,\r\n.abicsAccessibilityPopover .sapMPopoverHeader .sapMBarContainer {\r\n  background-color: rgb(39, 39, 134) !important;\r\n  color: whitesmoke !important;\r\n\r\n}\r\n\r\n.abicsAccessibilityPopover .sapMPopoverHeader .sapMBtnIcon {\r\n  color: whitesmoke !important;\r\n}",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/Popover.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\Popover.fragment.xml",
      "code": "<core:FragmentDefinition\r\n    xmlns=\"sap.m\"\r\n    xmlns:core=\"sap.ui.core\"\r\n>\r\n    <Popover\r\n        class=\"abicsAccessibilityPopover sapUiSmallMarginBeginEnd sapUiTinyMarginTop\"\r\n        id=\"abicsAccessibilityPopover\"\r\n        placement=\"Bottom\"\r\n        showArrow=\"false\"\r\n        title=\"{i18n>/popover.title}\"\r\n        contentWidth=\"280px\"\r\n    >\r\n        <customHeader>\r\n            <Bar>\r\n                <contentMiddle>\r\n                    <Title text=\"{i18n>/popover.header.title}\" class=\"popoverTitle\" />\r\n                </contentMiddle>\r\n                <contentRight>\r\n                    <Button id=\"closePopoverButton\" icon=\"sap-icon://notification\" press=\".onPopoverClosePress\" tooltip=\"{i18n>/popover.close.tooltip}\" class=\"closePopoverButton\"/>\r\n                </contentRight>\r\n            </Bar>\r\n        </customHeader>\r\n        <content>\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.FontSizePanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.TextToSpeechPanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.ColorBlindnessPanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.BlaufilterPanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.NightModePanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.ToggleImagesPanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.ContrastModePanel\"\r\n                type=\"XML\"\r\n            />\r\n            <core:Fragment\r\n                fragmentName=\"ui5-smart-access.fragments.ResetAllPanel\"\r\n                type=\"XML\"\r\n            />\r\n        </content>\r\n    </Popover>\r\n</core:FragmentDefinition>\r\n",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/FontSizePanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\FontSizePanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"fontSizePanel\" expandable=\"true\" expanded=\"{settings>/fontSizeExpanded}\" width=\"auto\" class=\"fontSizePanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\"onFontSizeToolbarPress\">\r\n          <core:Icon src=\"sap-icon://text\" size=\"20px\" />\r\n          <Title text=\"{i18n>/fontSize.title}\"/>\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n      <content>\r\n         <VBox justifyContent=\"Center\" alignItems=\"Center\" width=\"100%\">\r\n            <Button id=\"fontStepInput\" text=\"{settings>/fontStep}\" width=\"150px\"/>\r\n            <HBox alignItems=\"Center\" width=\"150px\" justifyContent=\"SpaceBetween\">\r\n               <Button id=\"decreaseFontButton\" icon=\"sap-icon://less\" />\r\n               <Button id=\"resetFontButton\" icon=\"sap-icon://refresh\" />\r\n               <Button id=\"increaseFontButton\" icon=\"sap-icon://add\" />\r\n            </HBox>\r\n         </VBox>\r\n      </content>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/TextToSpeechPanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\TextToSpeechPanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"ttsPanel\" expandable=\"true\" expanded=\"{settings>/ttsExpanded}\" width=\"auto\" class=\"ttsPanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\"onTTSToolbarPress\">\r\n            <core:Icon src=\"sap-icon://microphone\" size=\"20px\" />\r\n            <Title text=\"{i18n>/tts.title}\" />\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n      <content>\r\n         <VBox justifyContent=\"Center\" alignItems=\"Center\" width=\"100%\">\r\n            <HBox alignItems=\"Center\" width=\"200px\" justifyContent=\"SpaceBetween\">\r\n               <Button id=\"ttsStartButton\" text=\"{i18n>/tts.start}\" icon=\"sap-icon://begin\"/>\r\n               <Button id=\"ttsStopButton\" text=\"{i18n>/tts.stop}\" icon=\"sap-icon://stop\"/>\r\n            </HBox>\r\n            <VBox alignItems=\"Center\" width=\"100%\" justifyContent=\"SpaceBetween\" >\r\n               <Label text=\"{i18n>/tts.speed}\" labelFor=\"ttsRateSlider\"/>\r\n               <Slider id=\"ttsRateSlider\" min=\"0.5\" max=\"2\" step=\"0.1\" value=\"{settings>/ttsRate}\" width=\"200px\"/>\r\n            </VBox>\r\n            <VBox alignItems=\"Center\" width=\"100%\" justifyContent=\"SpaceBetween\">\r\n               <Label text=\"{i18n>/tts.volume}\" labelFor=\"ttsVolumeSlider\"/>\r\n               <Slider id=\"ttsVolumeSlider\" min=\"0\" max=\"1\" step=\"0.1\" value=\"{settings>/ttsVolume}\" width=\"200px\"/>\r\n            </VBox>\r\n            <HBox alignItems=\"Center\" width=\"200px\" justifyContent=\"SpaceBetween\">\r\n               <Label text=\"{i18n>/tts.hover}\" labelFor=\"ttsHoverSwitch\"/>\r\n               <Switch id=\"ttsHoverSwitch\" state=\"{settings>/ttsHover}\"/>\r\n            </HBox>\r\n         </VBox>\r\n      </content>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/ColorBlindnessPanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\ColorBlindnessPanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"colorBlindnessPanel\" expandable=\"true\" expanded=\"{settings>/colorBlindnessExpanded}\" width=\"auto\" class=\"colorBlindnessPanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\"onColorBlindnessToolbarPress\">\r\n            <core:Icon src=\"sap-icon://palette\" size=\"20px\" />\r\n            <Title text=\"{i18n>/colorBlindness.title}\" />\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n      <content>\r\n         <VBox visible=\"{settings>/colorBlindnessVisible}\" justifyContent=\"Center\" alignItems=\"Center\" width=\"100%\">\r\n            <HBox alignItems=\"Center\" width=\"200px\" justifyContent=\"SpaceBetween\">\r\n               <Select id=\"colorBlindnessSelect\" selectedKey=\"{settings>/colorBlindnessType}\" type=\"Default\">\r\n                  <items>\r\n                     <core:Item key=\"none\" text=\"{i18n>/colorBlindness.none}\" />\r\n                     <core:Item key=\"protanopia\" text=\"{i18n>/colorBlindness.protanopia}\" />\r\n                     <core:Item key=\"deuteranopia\" text=\"{i18n>/colorBlindness.deuteranopia}\" />\r\n                     <core:Item key=\"tritanopia\" text=\"{i18n>/colorBlindness.tritanopia}\" />\r\n                     <core:Item key=\"achromatopsia\" text=\"{i18n>/colorBlindness.achromatopsia}\" />\r\n                  </items>\r\n               </Select>\r\n               <Button id=\"colorBlindnessResetButton\"  icon=\"sap-icon://refresh\"/>\r\n\r\n            </HBox>\r\n         </VBox>\r\n      </content>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/BlaufilterPanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\BlaufilterPanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"blaufilterPanel\" expandable=\"true\" expanded=\"{settings>/blaufilterExpanded}\" width=\"auto\" class=\"blaufilterPanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\".onBlaufilterToolbarPress\">\r\n            <core:Icon src=\"sap-icon://light-mode\" size=\"20px\" />\r\n            <Title text=\"{= ${settings>/blaufilterExpanded} ? '${i18n>/blueFilter.deactivate}' : '${i18n>/blueFilter.activate}'}\" />\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n      <content>\r\n         <VBox justifyContent=\"Center\" alignItems=\"Center\" width=\"100%\">\r\n            <HBox alignItems=\"Center\" width=\"200px\" justifyContent=\"SpaceBetween\">\r\n               <Slider id=\"blueLightFilterSlider\" min=\"0\" max=\"100\" step=\"1\" value=\"{settings>/blueLightFilterLevel}\" width=\"150px\"/>\r\n               <Button id=\"blueLightFilterResetButton\" icon=\"sap-icon://refresh\"/>\r\n            </HBox>\r\n         </VBox>\r\n      </content>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/NightModePanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\NightModePanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"nightModePanel\" expandable=\"false\" width=\"auto\" class=\"nightModePanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\".onNightModeToolbarPress\">\r\n            <core:Icon src=\"sap-icon://dark-mode\" size=\"20px\" />\r\n            <Title text=\"{= ${settings>/nightModeActive} ? '${i18n>/nightMode.deactivate}' : '${i18n>/nightMode.activate}' }\" />\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/ToggleImagesPanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\ToggleImagesPanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"toggleImagesPanel\" expandable=\"false\" width=\"auto\" class=\"toggleImagesPanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\".onToggleImagesToolbarPress\">\r\n            <core:Icon src=\"sap-icon://background\" size=\"20px\" />\r\n            <Title text=\"{= ${settings>/toggleImagesActive} ? '${i18n>/toggleImages.show}' : '${i18n>/toggleImages.hide}' }\" />\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/ContrastModePanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\ContrastModePanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n    <Panel id=\"contrastModePanel\" expandable=\"false\" width=\"auto\" class=\"contrastModePanel\">\r\n        <headerToolbar>\r\n            <OverflowToolbar active=\"true\" press=\".onContrastModeToolbarPress\">\r\n                <core:Icon src=\"sap-icon://paint-bucket\" size=\"20px\" />\r\n                <Title text=\"{= ${settings>/contrastModeActive} ? '${i18n>/contrastMode.deactivate}' : '${i18n>/contrastMode.activate}' }\" />\r\n            </OverflowToolbar>\r\n        </headerToolbar>\r\n    </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/fragments/ResetAllPanel.fragment.xml",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\fragments\\ResetAllPanel.fragment.xml",
      "code": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n   <Panel id=\"resetAllPanel\" expandable=\"false\" width=\"auto\" class=\"resetAllPanel\">\r\n      <headerToolbar>\r\n         <OverflowToolbar active=\"true\" press=\".onResetAllToolbarPress\">\r\n            <core:Icon src=\"sap-icon://reset\" size=\"20px\" />\r\n            <Title text=\"{i18n>/resetAll.title}\" />\r\n         </OverflowToolbar>\r\n      </headerToolbar>\r\n   </Panel>\r\n</core:FragmentDefinition> ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/i18n/i18n_en.properties",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\i18n\\i18n_en.properties",
      "code": "# Main Popover\r\npopover.title=Eye Able Assistant\r\npopover.header.title=Accessibility Assistant\r\npopover.close.tooltip=Close\r\n\r\n# Font Size Panel\r\nfontSize.title=Font Size\r\n\r\n# Text To Speech Panel\r\ntts.title=Read Website\r\ntts.start=Read\r\ntts.stop=Stop\r\ntts.speed=Speed\r\ntts.volume=Volume\r\ntts.hover=Hover Reading\r\n\r\n# Color Blindness Panel\r\ncolorBlindness.title=Color Blindness\r\ncolorBlindness.none=None\r\ncolorBlindness.protanopia=Protanopia\r\ncolorBlindness.deuteranopia=Deuteranopia\r\ncolorBlindness.tritanopia=Tritanopia\r\ncolorBlindness.achromatopsia=Achromatopsia\r\n\r\n# Blue Light Filter Panel\r\nblueFilter.activate=Blue Filter\r\nblueFilter.deactivate=Deactivate Blue Filter\r\n\r\n# Night Mode Panel\r\nnightMode.activate=Night Mode\r\nnightMode.deactivate=Deactivate Night Mode\r\n\r\n# Contrast Mode Panel\r\ncontrastMode.activate=Contrast Mode\r\ncontrastMode.deactivate=Deactivate Contrast Mode\r\n\r\n# Toggle Images Panel\r\ntoggleImages.hide=Hide Images\r\ntoggleImages.show=Show Images\r\n\r\n# Reset All Panel\r\nresetAll.title=Reset All\r\n\r\n# Tab Navigation\r\ntabNavigation.title=Tab Navigation\r\n\r\n# Contrast Ratio\r\ncontrast.readable=READABLE\r\ncontrast.notReadable=NOT READABLE ",
      "type": "resource"
    },
    {
      "name": "ui5-smart-access/i18n/i18n.properties",
      "path": "C:\\Users\\UgurBiricik\\Desktop\\Projects\\abics-accessibility-popover\\package\\i18n\\i18n.properties",
      "code": "# Ana Popover\r\npopover.title=Eye Able Assistent\r\npopover.header.title=Accessibility Assistent\r\npopover.close.tooltip=Schließen\r\n\r\n# Font Size Panel\r\nfontSize.title=Schriftgröße\r\n\r\n# Text To Speech Panel\r\ntts.title=Webseite vorlesen\r\ntts.start=Vorlesen\r\ntts.stop=Stopp\r\ntts.speed=Geschwindigkeit\r\ntts.volume=Lautstärke\r\ntts.hover=Hover-Lesen\r\n\r\n# Color Blindness Panel\r\ncolorBlindness.title=Farbschwäche\r\ncolorBlindness.none=Keine\r\ncolorBlindness.protanopia=Protanopie\r\ncolorBlindness.deuteranopia=Deuteranopie\r\ncolorBlindness.tritanopia=Tritanopie\r\ncolorBlindness.achromatopsia=Achromatopsie\r\n\r\n# Blue Light Filter Panel\r\nblueFilter.activate=Blaufilter  \r\nblueFilter.deactivate=Blaufilter deaktivieren\r\n\r\n# Night Mode Panel\r\nnightMode.activate=Nachtmodus \r\nnightMode.deactivate=Nachtmodus deaktivieren\r\n\r\n# Contrast Mode Panel\r\ncontrastMode.activate=Kontrastmodus \r\ncontrastMode.deactivate=Kontrastmodus deaktivieren\r\n\r\n# Toggle Images Panel\r\ntoggleImages.hide=Bilder ausblenden\r\ntoggleImages.show=Bilder einblenden\r\n\r\n# Reset All Panel\r\nresetAll.title=Alles zurücksetzen\r\n\r\n# Tab Navigation\r\ntabNavigation.title=Tab Navigation\r\n\r\n# Contrast Ratio\r\ncontrast.readable=LESBAR\r\ncontrast.notReadable=NICHT LESBAR ",
      "type": "resource"
    }
  ]
}